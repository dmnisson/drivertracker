{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/driver.service.ts","webpack:///./src/app/drivers/drivers.component.html","webpack:///./src/app/drivers/drivers.component.sass","webpack:///./src/app/drivers/drivers.component.ts","webpack:///./src/app/leg.service.ts","webpack:///./src/app/legs/legs.component.html","webpack:///./src/app/legs/legs.component.sass","webpack:///./src/app/legs/legs.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-drivers></app-drivers>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'drivertracker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { DriversComponent } from './drivers/drivers.component';\nimport { LegsComponent } from './legs/legs.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DriversComponent,\n    LegsComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Driver } from './driver';\nimport { LegService } from './leg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService {\n  private driversUrl = '/api/driversapi';\n\n    getDrivers(): Observable<Driver[]> {\n        return this.http.get<Driver[]>(this.driversUrl);\n    }\n\n    constructor(\n        private http: HttpClient,\n        private legService: LegService) { }\n}\n","module.exports = \"<h2>Drivers</h2>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" #driversForm=\\\"ngForm\\\">\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>\\r\\n                Name\\r\\n            </th>\\r\\n            <th>\\r\\n                License Number\\r\\n            </th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let driver of drivers\\\">\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required name=\\\"name\\\" value=\\\"{{driver.name}}\\\"\\n                 *ngSwitchCase=\\\"driver.driverID\\\"/>\\r\\n                <span *ngSwitchDefault>{{driver.name}}</span>\\r\\n            </td>\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"licenseNumber\\\" required name=\\\"licenseNumber\\\" value=\\\"{{driver.licenseNumber}}\\\"\\r\\n                       *ngSwitchCase=\\\"driver.driverID\\\" />\\r\\n                <span *ngSwitchDefault>{{driver.licenseNumber}}</span>\\r\\n            </td>\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <span *ngSwitchCase=\\\"driver.driverID\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!driversForm.form.valid\\\">Save</button>\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\n                </span>\\n                <span *ngSwitchDefault>\\r\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"editClicked(driver)\\\">Edit</a> |\\r\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"showDetails(driver)\\\">Details</a> |\\r\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"showDeleteConfirm(driver)\\\">Delete</a>\\n                </span>\\r\\n            </td>\\r\\n        </tr>\\n        <tr *ngIf=\\\"adding; else addLink\\\">\\n            <td>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required name=\\\"name\\\" />\\n            </td>\\n            <td>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"licenseNumber\\\" required name=\\\"licenseNumber\\\" />\\n            </td>\\n            <td>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!driversForm.form.valid\\\">Save</button>\\n                <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancelAdd()\\\">Cancel</button>\\n            </td>\\n        </tr>\\n        <ng-template #addLink>\\n            <a href=\\\"javascript:void(0);\\\" (click)=\\\"addNew()\\\">New Driver</a>\\n        </ng-template>\\r\\n    </tbody>\\r\\n</table>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlcnMvZHJpdmVycy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Driver } from '../driver';\nimport { DriverService } from '../driver.service';\n\n@Component({\n  selector: 'app-drivers',\n  templateUrl: './drivers.component.html',\n  styleUrls: ['./drivers.component.sass']\n})\nexport class DriversComponent implements OnInit {\n\n    drivers: Driver[];\n    editing: number;\n    deleteConfirming: number;\n    detailsShowing: number;\n    adding: boolean;\n\n    getDrivers(): void {\n        this.driverService.getDrivers().subscribe(drivers => this.drivers = drivers);\n    }\n\n    editClicked(driver: Driver): void {\n        this.editing = driver.driverID;\n    }\n\n    cancelEdit(): void {\n        this.editing = 0;\n    }\n\n    showDetails(driver: Driver): void {\n        this.detailsShowing = driver.driverID;\n    }\n\n    showDeleteConfirm(driver: Driver): void {\n        this.deleteConfirming = driver.driverID;\n    }\n\n    addNew(): void {\n        this.adding = true;\n    }\n\n    cancelAdd(): void {\n        this.adding = false;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    constructor(private driverService: DriverService) { }\n\n    ngOnInit() {\n        this.getDrivers();\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegService {\n\n  constructor() { }\n}\n","module.exports = \"<p>\\n  legs works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlZ3MvbGVncy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-legs',\n  templateUrl: './legs.component.html',\n  styleUrls: ['./legs.component.sass']\n})\nexport class LegsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}