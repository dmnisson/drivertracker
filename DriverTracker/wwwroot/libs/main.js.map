{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/driver.service.ts","webpack:///./src/app/drivers/drivers.component.html","webpack:///./src/app/drivers/drivers.component.sass","webpack:///./src/app/drivers/drivers.component.ts","webpack:///./src/app/leg.service.ts","webpack:///./src/app/legs/legs.component.html","webpack:///./src/app/legs/legs.component.sass","webpack:///./src/app/legs/legs.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DriversComponent } from './drivers/drivers.component';\n\nconst routes: Routes = [\n    { path: 'Drivers', component: DriversComponent }\n    ];\n\n@NgModule({\n  imports: [\n      RouterModule.forRoot(routes)\n  ],\n  exports: [\n      RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'drivertracker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { DriversComponent } from './drivers/drivers.component';\nimport { LegsComponent } from './legs/legs.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DriversComponent,\n    LegsComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      AppRoutingModule,\n      NgbModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Driver } from './driver';\nimport { LegService } from './leg.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService {\n  private driversUrl = '/api/driversapi';\n\n    getDrivers(): Observable<Driver[]> {\n        return this.http.get<Driver[]>(this.driversUrl);\n    }\n\n    getDriver(id: number): Observable<Driver> {\n        const url = `${this.driversUrl}/${id}`;\n        return this.http.get<Driver>(url);\n    }\n\n\n    updateDriver(driver: Driver): Observable<any> {\n        const url = `${this.driversUrl}/${driver.driverID}`;\n        return this.http.put(url, driver, httpOptions);\n    }\n\n    addDriver(driver: Driver): Observable<Driver> {\n        const url = `${this.driversUrl}/new`;\n        return this.http.post<Driver>(url, driver, httpOptions);\n    }\n\n    deleteDriver(driver: Driver | number): Observable<Driver> {\n        const id = typeof driver === 'number' ? driver : driver.driverID;\n        const url = `${this.driversUrl}/${id}`;\n        return this.http.delete<Driver>(url, httpOptions);\n    }\n\n    constructor(\n        private http: HttpClient,\n        private legService: LegService) { }\n}\n","module.exports = \"<h2>Drivers</h2>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" #driversForm=\\\"ngForm\\\">\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>\\r\\n                Name\\r\\n            </th>\\r\\n            <th>\\r\\n                License Number\\r\\n            </th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let driver of drivers\\\">\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required name=\\\"name_{{driver.driverID}}\\\" [(ngModel)]=\\\"driver.name\\\"\\n                 *ngSwitchCase=\\\"driver.driverID\\\"/>\\r\\n                <span *ngSwitchDefault>{{driver.name}}</span>\\r\\n            </td>\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"licenseNumber\\\" required name=\\\"licenseNumber_{{driver.driverID}}\\\" [(ngModel)]=\\\"driver.licenseNumber\\\"\\r\\n                       *ngSwitchCase=\\\"driver.driverID\\\" />\\r\\n                <span *ngSwitchDefault>{{driver.licenseNumber}}</span>\\r\\n            </td>\\r\\n            <td [ngSwitch]=\\\"editing\\\">\\n                <span *ngSwitchCase=\\\"driver.driverID\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!driversForm.form.valid\\\">Save</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\n                </span>\\n\\n                <span *ngSwitchDefault>\\r\\n                    <a class=\\\"btn btn-secondary\\\" href=\\\"/Drivers/Details/{{driver.driverID}}\\\">Details</a>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editClicked(driver)\\\">Edit</button> \\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"showDeleteConfirm(content, driver)\\\">Delete</button>\\r\\n                </span>\\r\\n            </td>\\r\\n        </tr>\\n        <tr *ngIf=\\\"adding; else addLink\\\">\\n            <td>\\n                <input class=\\\"form-control\\\" required #name />\\n            </td>\\n            <td>\\n                <input class=\\\"form-control\\\" required #licenseNumber />\\n            </td>\\n            <td>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!driversForm.form.valid\\\" (click)=\\\"saveNew(name.value, licenseNumber.value); name.value=''; licenseNumber.value=''\\\">Save</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelAdd()\\\">Cancel</button>\\n            </td>\\n        </tr>\\n        <ng-template #addLink>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNew()\\\">New Driver</button>\\n        </ng-template>\\r\\n    </tbody>\\r\\n</table>\\n</form>\\n\\n<!-- delete confirm modal -->\\n<ng-template #content let-modal>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Confirm Delete</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('crossClicked')\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\r\\n                <p>Are you sure you want to delete driver {{toDelete.name}}?</p>\\r\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"modal.close('deleteConfirmed')\\\">Delete</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close('deleteCancelled')\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlcnMvZHJpdmVycy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Driver } from '../driver';\nimport { DriverService } from '../driver.service';\n\nconst DELETE_CONFIRMED: string = \"deleteConfirmed\";\nconst DELETE_CANCELLED: string = \"deleteCancelled\";\nconst CROSS_CLICKED: string = \"crossClicked\";\n\n@Component({\n  selector: 'app-drivers',\n  templateUrl: './drivers.component.html',\n  styleUrls: ['./drivers.component.sass']\n})\nexport class DriversComponent implements OnInit {\n\n    drivers: Driver[];\n    editing: number;\n    adding: boolean;\n    toDelete: Driver;\n\n    getDrivers(): void {\n        this.driverService.getDrivers().subscribe(drivers => this.drivers = drivers);\n    }\n\n    editClicked(driver: Driver): void {\n        this.cancelAdd();\n        this.editing = driver.driverID;\n    }\n    \n    cancelEdit(): void {\n        this.driverService.getDriver(this.editing).subscribe(driver => {\n            let dmem: Driver = this.drivers.find(d => d.driverID == this.editing);\n            if (dmem !== null && driver !== null) {\n                dmem.licenseNumber = driver.licenseNumber;\n                dmem.name = driver.name;\n                this.editing = 0;\n            }\n        });\n    }\n\n    addNew(): void {\n        this.cancelEdit();\n        this.adding = true;\n    }\n\n    cancelAdd(): void {\n        this.adding = false;\n    }\n\n    onSubmit(): void {\n        if (this.editing !== 0) {\n            let driver: Driver = this.drivers.find(d => d.driverID == this.editing);\n            this.driverService.updateDriver(driver).subscribe(x => this.editing = 0);\n        }\n    }\n\n    saveNew(name: string, licenseNumber: string): void {\n        name = name.trim();\n        if (!name) {return;}\n        licenseNumber = licenseNumber.trim();\n        if (!licenseNumber) {return;}\n\n        this.driverService.addDriver({name, licenseNumber} as Driver)\n            .subscribe(driver => this.drivers.push(driver));\n    }\n\n    showDeleteConfirm(content, driver: Driver) {\n        this.toDelete = driver;\n        this.modalService.open(content, {ariaLabelledBy: 'deleteConfirmLabel'})\n            .result.then((result) => {\n                if (result == DELETE_CONFIRMED) {\n                    this.deleteDriver(driver);\n                }\n                else {\n                    this.cancelDelete();\n                }\n            }, (reason) => {\n                this.cancelDelete();\n            });\n    }\n\n    deleteDriver(driver: Driver) {\n        this.driverService.deleteDriver(driver).subscribe(x => {\n            var indexToDelete = this.drivers.indexOf(this.toDelete, 0);\n            this.drivers.splice(indexToDelete, 1);\n            this.toDelete = null;\n        });\n    }\n\n    cancelDelete() {\n        this.toDelete = null;\n    }\n\n    constructor(private driverService: DriverService, private modalService: NgbModal) {\n        this.editing = 0;\n        this.adding = false;\n    }\n\n    ngOnInit() {\n        this.getDrivers();\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegService {\n\n  constructor() { }\n}\n","module.exports = \"<p>\\n  legs works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlZ3MvbGVncy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-legs',\n  templateUrl: './legs.component.html',\n  styleUrls: ['./legs.component.sass']\n})\nexport class LegsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}