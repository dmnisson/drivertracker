{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/driver-details/driver-details.component.html","webpack:///./src/app/driver-details/driver-details.component.sass","webpack:///./src/app/driver-details/driver-details.component.ts","webpack:///./src/app/driver.service.ts","webpack:///./src/app/drivers/drivers.component.html","webpack:///./src/app/drivers/drivers.component.sass","webpack:///./src/app/drivers/drivers.component.ts","webpack:///./src/app/geocoding.service.ts","webpack:///./src/app/leg.service.ts","webpack:///./src/app/leg.ts","webpack:///./src/app/legs/legs.component.html","webpack:///./src/app/legs/legs.component.sass","webpack:///./src/app/legs/legs.component.ts","webpack:///./src/app/login-model.ts","webpack:///./src/app/pickup-predictor.service.ts","webpack:///./src/app/pickup-predictor/pickup-predictor.component.html","webpack:///./src/app/pickup-predictor/pickup-predictor.component.scss","webpack:///./src/app/pickup-predictor/pickup-predictor.component.ts","webpack:///./src/app/predictor.service.ts","webpack:///./src/app/predictor/predictor.component.html","webpack:///./src/app/predictor/predictor.component.sass","webpack:///./src/app/predictor/predictor.component.ts","webpack:///./src/app/statistics.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DriversComponent } from './drivers/drivers.component';\nimport { PredictorComponent } from './predictor/predictor.component';\nimport { PickupPredictorComponent } from './pickup-predictor/pickup-predictor.component';\nimport { DriverDetailsComponent } from './driver-details/driver-details.component';\n\nconst routes: Routes = [\n    { path: 'Drivers', component: DriversComponent },\n    { path: 'Predictor/Index/:id', component: PredictorComponent },\n    { path: 'Drivers/Details/:id', component: DriverDetailsComponent },\n    { path: 'PickupPredictor', component: PickupPredictorComponent }\n];\n\n@NgModule({\n  imports: [\n      RouterModule.forRoot(routes)\n  ],\n  exports: [\n      RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'drivertracker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { DriversComponent } from './drivers/drivers.component';\nimport { LegsComponent } from './legs/legs.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PredictorComponent } from './predictor/predictor.component';\nimport { PickupPredictorComponent } from './pickup-predictor/pickup-predictor.component';\nimport { DriverDetailsComponent } from './driver-details/driver-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DriversComponent,\n    LegsComponent,\n    PredictorComponent,\n    PickupPredictorComponent,\n    DriverDetailsComponent,\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      AppRoutingModule,\n      NgbModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, BehaviorSubject, timer } from 'rxjs';\nimport { filter, map, switchMap, skipWhile } from 'rxjs/operators';\nimport { LoginModel } from './login-model';\nimport * as jwt_decode from 'jwt-decode';\n\nconst jsonHeader = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    private authUrl = '/api/account';\n    private token = new BehaviorSubject<string>(null);\n    private tokenExpired = new BehaviorSubject<boolean>(false);\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    makeToken(email: string, password: string) : void {\n        const url = this.authUrl + '/maketoken';\n        this.http.post<string>(url, new LoginModel(email, password),\n            Object.assign(jsonHeader, {responseType: 'text' as 'json'}))\n            .subscribe(t => this.updateToken(t));\n    }\n\n    makeSessionUserToken(force = false) : void {\n        const url = this.authUrl + '/makesessionusertoken';\n        this.token.asObservable().pipe(\n            filter(token => force || token == null),\n            switchMap(token => this.http.post<string>(url, \"\", {responseType: 'text' as 'json'})))\n            .subscribe(t => this.updateToken(t));\n    }\n\n    refreshToken(): void {\n        const url = this.authUrl + '/refreshtoken';\n        this.authHeader().pipe(\n            map(ah => new HttpHeaders(ah)),\n            switchMap(ah => this.http.post<string>(url, \"\", {headers: ah})))\n            .subscribe(t => this.updateToken(t));\n    }\n\n    getCurrentToken(): Observable<string> {\n        return this.token.asObservable().pipe(skipWhile(t => t == null));\n    }\n\n    isTokenExpired(): Observable<boolean> {\n        return this.tokenExpired.asObservable();\n    }\n\n    // update the information stored in the class\n    updateToken(token: string): void {\n        this.token.next(token);\n        this.tokenExpired.next(false);\n        let expDate = jwt_decode(token).exp;\n        timer(expDate - 15*60000).subscribe(obj => this.refreshToken());\n    }\n\n    authHeader(): Observable<any> {\n        return this.getCurrentToken().pipe(map(t => {return {'Authorization': 'Bearer ' + t};}));\n    }\n}","module.exports = \"<ng-template [ngIf]=\\\"driverStatistics != null\\\">\\r\\n    <div class=\\\"card w-md-50 mb-2\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">Summary</h5>\\r\\n        </div>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li class=\\\"list-group-item\\\">Pickups: {{driverStatistics.pickups}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Miles driven: {{driverStatistics.milesDriven}}</li>\\r\\n            <li class=\\\"list-group-item\\\" *ngIf=\\\"driverStatistics.averagePickupDelay != null\\\">Average pickup delay: {{driverStatistics.averagePickupDelay}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Total fares: {{driverStatistics.totalFares}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Total fuel costs: {{driverStatistics.totalCosts}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template [ngIf]=\\\"driver != null\\\">\\r\\n    <div class=\\\"card w-100 mb-2\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n                <h5 class=\\\"card-title d-flex-inline\\\">Details</h5>\\r\\n                <button class=\\\"btn btn-primary d-flex-inline\\\" (click)=\\\"clickEditDriverDetails()\\\" [disabled]=\\\"editingDriverDetails\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i><span class=\\\"sr-only\\\">Edit</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <ng-template [ngIf]=\\\"editingDriverDetails\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmitDriverDetails()\\\" #driverDetailsForm=\\\"ngForm\\\">\\r\\n                    <dl class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-5 card-text\\\">\\r\\n                            Name\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5 card-text\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required name=\\\"name\\\" [(ngModel)]=\\\"driver.name\\\" />\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5 card-text\\\">\\r\\n                            License Number\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5 card-text\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"licenseNumber\\\" required name=\\\"licenseNumber\\\" [(ngModel)]=\\\"driver.licenseNumber\\\" />\\r\\n                        </dd>\\r\\n                    </dl>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-2\\\" [disabled]=\\\"!driverDetailsForm.form.valid\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEditDriverDetails()\\\">Cancel</button>\\r\\n                </form>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"!editingDriverDetails\\\">\\r\\n                <dl class=\\\"row\\\">\\r\\n                    <dt class=\\\"col-sm-5 card-text\\\">\\r\\n                        Name\\r\\n                    </dt>\\r\\n                    <dd class=\\\"col-sm-5 card-text\\\">\\r\\n                        {{driver.name}}\\r\\n                    </dd>\\r\\n                    <dt class=\\\"col-sm-5 card-text\\\">\\r\\n                        License Number\\r\\n                    </dt>\\r\\n                    <dd class=\\\"col-sm-5 card-text\\\">\\r\\n                        {{driver.licenseNumber}}\\r\\n                    </dd>\\r\\n                </dl>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"card w-100 mb-2\\\">\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">Legs</h5>\\r\\n        <ng-template [ngIf]=\\\"legs != null && legs.length > 0\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                Start Address\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Requested Pickup Time\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Actual Start Time\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Destination Address\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Arrival Time\\r\\n                            </th>\\r\\n                            <th class=\\\"d-none d-md-table-cell\\\">\\r\\n                                Distance\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Fare\\r\\n                            </th>\\r\\n                            <th class=\\\"d-none d-md-table-cell\\\">\\r\\n                                Passengers Aboard\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Pickups\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let leg of legs\\\">\\r\\n                            <td>\\r\\n                                {{leg.startAddress}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.pickupRequestTime | date:'short'}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.startTime | date:'short'}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.destinationAddress}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.arrivalTime | date:'short'}}\\r\\n                            </td>\\r\\n                            <td class=\\\"d-none d-md-table-cell\\\">\\r\\n                                {{leg.distance}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.fare}}\\r\\n                            </td>\\r\\n                            <td class=\\\"d-none d-md-table-cell\\\">\\r\\n                                {{leg.numOfPassengersAboard}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                {{leg.numOfPassengersPickedUp}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <span class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"showLegDetails(leg, legDetails)\\\">Details</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"showDeleteConfirm(leg, deleteConfirm)\\\">Delete</button>\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"10\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showLegDetails(null, legDetails)\\\">New Leg</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template [ngIf]=\\\"legs == null || legs.length == 0\\\">\\r\\n            <p class=\\\"card-text\\\">No legs have been entered.</p>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <a class=\\\"btn btn-default\\\" href=\\\"/Drivers/\\\">Back to Drivers List</a>\\r\\n</div>\\r\\n\\r\\n<ng-template #legDetails let-modal>\\r\\n    <form (ngSubmit)=\\\"onSubmitLegDetails()\\\" #legDetailsForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h2>\\r\\n                    Leg Details\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editShowingLeg()\\\">\\r\\n                        <i class=\\\"fas fa-edit\\\"></i><span class=\\\"sr-only\\\">Edit</span>\\r\\n                    </button>\\r\\n                </h2>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('legDetailsCrossClick')\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div>\\r\\n                    <dl class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Start Address\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"startAddress\\\" name=\\\"startAddress\\\" required [(ngModel)]=\\\"showingLeg.startAddress\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyStartAddress\\\" />\\r\\n                            <ng-template #readOnlyStartAddress>{{showingLeg.startAddress}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Pickup Request Time\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"pickupRequestTime\\\" name=\\\"pickupRequestTime\\\" [(ngModel)]=\\\"showingLeg.pickupRequestTime\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyPickupRequestTime\\\" />\\r\\n                            <ng-template #readOnlyPickupRequestTime>{{showingLeg.pickupRequestTime | date:'short'}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Start Time\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"startTime\\\" name=\\\"startTime\\\" required [(ngModel)]=\\\"showingLeg.startTime\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else startTime\\\" />\\r\\n                            <ng-template #readOnlyStartTime>{{showingLeg.startTime | date:'short'}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Destination Address\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"destinationAddress\\\" name=\\\"destinationAddress\\\" required [(ngModel)]=\\\"showingLeg.destinationAddress\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyDestinationAddress\\\" />\\r\\n                            <ng-template #readOnlyDestinationAddress>{{showingLeg.destinationAddress}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Arrival Time\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"arrivalTime\\\" name=\\\"arrivalTime\\\" required [(ngModel)]=\\\"showingLeg.arrivalTime\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyArrivalTime\\\" />\\r\\n                            <ng-template #readOnlyArrivalTime>{{showingLeg.arrivalTime | date:'short'}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Distance\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"distance\\\" name=\\\"distance\\\" required [(ngModel)]=\\\"showingLeg.distance\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyDistance\\\" />\\r\\n                            <ng-template #readOnlyDistance>{{showingLeg.distance}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Fare\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"fare\\\" name=\\\"fare\\\" required [(ngModel)]=\\\"showingLeg.fare\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyFare\\\" />\\r\\n                            <ng-template #readOnlyFare>{{showingLeg.fare}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Number of Passengers Aboard\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"numOfPassengersAboard\\\" name=\\\"numOfPassengersAboard\\\" required [(ngModel)]=\\\"showingLeg.numOfPassengersAboard\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyNumOfPassengersAboard\\\" />\\r\\n                            <ng-template #readOnlyNumOfPassengersAboard>{{showingLeg.numOfPassengersAboard}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Number of Passengers Picked Up\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"numOfPassengersPickedUp\\\" name=\\\"numOfPassengersPickedUp\\\" required [(ngModel)]=\\\"showingLeg.numOfPassengersPickedUp\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyNumOfPassengersPickedUp\\\" />\\r\\n                            <ng-template #readOnlyNumOfPassengersPickedUp>{{showingLeg.numOfPassengersPickedUp}}</ng-template>\\r\\n                        </dd>\\r\\n                        <dt class=\\\"col-sm-5\\\">\\r\\n                            Fuel Cost\\r\\n                        </dt>\\r\\n                        <dd class=\\\"col-sm-5\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"fuelCost\\\" name=\\\"fuelCost\\\" required [(ngModel)]=\\\"showingLeg.fuelCost\\\"\\r\\n                                   *ngIf=\\\"editingLegDetails; else readOnlyFuelCost\\\" />\\r\\n                            <ng-template #readOnlyFuelCost>{{showingLeg.fuelCost}}</ng-template>\\r\\n                        </dd>\\r\\n                    </dl>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!legDetailsForm.form.valid\\\" *ngIf=\\\"editingLegDetails\\\" (click)=\\\"modal.close('legDetailsSaveClick')\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close('legDetailsCloseClick')\\\">Close</button>\\r\\n            </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #deleteConfirm let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h2>Confirm</h2>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('legDeleteConfirmCrossClick')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        Are you sure you want to delete this leg?\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger mr-2\\\" (click)=\\\"modal.close('legDeleteConfirmClick')\\\">\\r\\n            Delete\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close('legDeleteCancelClick')\\\">\\r\\n            Cancel\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlci1kZXRhaWxzL2RyaXZlci1kZXRhaWxzLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DriverStatistics } from '../statistics';\nimport { Driver } from '../driver';\nimport { Leg } from '../leg';\n\nimport { DriverService } from '../driver.service';\nimport { LegService } from '../leg.service';\nimport { StatisticsService } from '../statistics.service';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nconst LEG_DETAILS_CROSS_CLICK = 'legDetailsCrossClick';\nconst LEG_DETAILS_SAVE_CLICK = 'legDetailsSaveClick';\nconst LEG_DETAILS_CLOSE_CLICK = 'legDetailsCloseClick';\nconst LEG_DELETE_CONFIRM_CROSS_CLICK = 'legDeleteConfirmCrossClick';\nconst LEG_DELETE_CONFIRM_CLICK = 'legDeleteConfirmClick';\nconst LEG_DELETE_CANCEL_CLICK = 'legDeleteCancelClick';\n\n@Component({\n  selector: 'app-driver-details',\n  templateUrl: './driver-details.component.html',\n  styleUrls: ['./driver-details.component.sass']\n})\nexport class DriverDetailsComponent implements OnInit {\n    driver: Driver;\n    driverStatistics: DriverStatistics;\n    legs: Leg[];\n    \n    editingDriverDetails = false;\n\n    editingLegDetails = false;\n    showingLeg: Leg;\n    addingLeg = false;\n    legToDelete: Leg;\n\n    constructor(private driverService: DriverService,\n        private legService: LegService,\n        private statisticsService: StatisticsService,\n        private authService: AuthService,\n        private aRoute: ActivatedRoute,\n        private ngbModal: NgbModal) {\n        this.aRoute.params.subscribe(p => this.loadDriver(p['id']));\n    }\n\n    ngOnInit() {\n        this.authService.makeSessionUserToken();\n    }\n\n    private loadDriver(id: number) {\n        this.driverService.getDriver(id).\n        subscribe(d => {\n            this.driver = d;\n            this.getDriverStatistics();\n            this.loadLegs();\n        });\n    }\n\n    private getDriverStatistics() {\n        this.statisticsService.getDriverStatistics(this.driver.driverID)\n            .subscribe(s => {this.driverStatistics = s;});\n    }\n\n    private loadLegs() {\n        this.legService.getLegs(this.driver.driverID)\n            .subscribe(a => {this.legs = a;});\n    }\n\n    clickEditDriverDetails() {\n        this.editingDriverDetails = true;\n    }\n\n    cancelEditDriverDetails() {\n        this.driverService.getDriver(this.driver.driverID)\n        .subscribe(drv => {this.driver = drv; this.editingDriverDetails = false;});\n    }\n\n    onSubmitDriverDetails() {\n        if (this.editingDriverDetails) {\n            this.driverService.updateDriver(this.driver)\n            .subscribe(x => {this.editingDriverDetails = false;});\n        }\n    }\n\n    showLegDetails(leg: Leg, legDetails) {\n        if (leg == null) {\n            this.showingLeg = new Leg();\n            this.showingLeg.driverID = this.driver.driverID;\n            this.addingLeg = true;\n            this.editingLegDetails = true;\n        } else {\n            this.showingLeg = leg;\n            this.addingLeg = false;\n        }\n\n        this.ngbModal.open(legDetails, {ariaLabelledBy: 'legDetailsLabel'}).result\n            .then((result) => {\n                if (result == LEG_DETAILS_SAVE_CLICK) {\n                    console.log(result);\n                    this.onSubmitLegDetails();\n                } else {\n                    this.cancelEditLegDetails();\n                }\n            }, (reason) => {\n                this.cancelEditLegDetails();\n            });\n    }\n\n    editShowingLeg() {\n        this.editingLegDetails = true;\n    }\n\n    onSubmitLegDetails() {\n        if (this.editingLegDetails) {\n            var cuObs: Observable<any>;\n            if (this.addingLeg) {\n                cuObs = this.legService.createLeg(this.showingLeg);\n            }\n            else {\n                cuObs = this.legService.updateLeg(this.showingLeg);\n\n            }\n            cuObs.subscribe(x => {\n                this.editingLegDetails = false;\n                this.getDriverStatistics();\n                if (this.addingLeg) {\n                    this.legs.push(this.showingLeg);\n                    this.addingLeg = false;\n                }\n                this.showingLeg = null;\n            });\n        }\n    }\n\n    cancelEditLegDetails() {\n        if (this.editingLegDetails) {\n            this.legService.getLeg(this.showingLeg.legID)\n                .subscribe(leg => {\n                    var indexToRestore = this.legs.indexOf(this.showingLeg);\n                    this.legs[indexToRestore] = leg;\n                    this.showingLeg = null;\n                    this.editingLegDetails = false;\n                });\n        }\n    }\n\n    showDeleteConfirm(leg: Leg, deleteConfirm) {\n        this.legToDelete = leg;\n        this.ngbModal.open(deleteConfirm, {ariaLabelledBy: 'legDeleteConfirmLabel'}).result\n            .then((result) => {\n                if (result == LEG_DELETE_CONFIRM_CLICK) {\n                    this.confirmDeleteLeg();\n                }\n                else {\n                    this.cancelDeleteLeg();\n                }\n            }, (reason) => {this.cancelDeleteLeg();});\n    }\n\n    confirmDeleteLeg() {\n        this.legService.deleteLeg(this.legToDelete).subscribe(x => {\n            var indexToDelete = this.legs.indexOf(this.legToDelete, 0);\n            this.legs.splice(indexToDelete, 1);\n            this.legToDelete = null;\n            this.getDriverStatistics();\n        });\n    }\n\n    cancelDeleteLeg() {\n        this.legToDelete = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\n\nimport { Driver } from './driver';\nimport { LegService } from './leg.service';\nimport { AuthService } from './auth.service';\n\nconst jsonHeader = { 'Content-Type': 'application/json' };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService {\n  private driversUrl = '/api/driversapi';\n\n    getDrivers(): Observable<Driver[]> {\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(ah)};}),\n            switchMap(h => this.http.get<Driver[]>(this.driversUrl, h)));\n    }\n\n    getDriver(id: number): Observable<Driver> {\n        const url = `${this.driversUrl}/${id}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(ah)};}),\n            switchMap(h => this.http.get<Driver>(url, h)));\n    }\n\n\n    updateDriver(driver: Driver): Observable<any> {\n        const url = `${this.driversUrl}/${driver.driverID}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            switchMap(options => this.http.put(url, driver, options)));\n    }\n\n    addDriver(driver: Driver): Observable<Driver> {\n        const url = `${this.driversUrl}/new`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            switchMap(options => this.http.post<Driver>(url, driver, options)));\n    }\n\n    deleteDriver(driver: Driver | number): Observable<Driver> {\n        const id = typeof driver === 'number' ? driver : driver.driverID;\n        const url = `${this.driversUrl}/${id}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            switchMap(options => this.http.delete<Driver>(url, options)));\n    }\n    \n\n    constructor(\n        private http: HttpClient,\n        private legService: LegService,\n        private authService: AuthService) {\n\n    }\n}\n","module.exports = \"<ng-template [ngIf]=\\\"companyStatistics != null\\\">\\r\\n    <div class=\\\"card w-md-50 mb-3\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">Statistics</h5>\\r\\n        </div>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li class=\\\"list-group-item\\\">{{companyStatistics.numOfDrivers}} driver<ng-template [ngIf]=\\\"companyStatistics.numOfDrivers != 1\\\">s</ng-template></li>\\r\\n            <li class=\\\"list-group-item\\\">{{companyStatistics.pickups}} passenger pickup<ng-template [ngIf]=\\\"companyStatistics.numOfPickups != 1\\\">s</ng-template></li>\\r\\n            <li class=\\\"list-group-item\\\">{{companyStatistics.milesDriven}} mile<ng-template [ngIf]=\\\"companyStatistics.milesDriven != 1\\\">s</ng-template> driven</li>\\r\\n            <li class=\\\"list-group-item\\\" *ngIf=\\\"companyStatistics.averagePickupDelay != null\\\">\\r\\n                Average pickup delay:\\r\\n                {{companyStatistics.averagePickupDelay}} minute<ng-template [ngIf]=\\\"companyStatistics.averagePickupDela != 1\\\">s</ng-template>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item\\\">Total fares: ${{companyStatistics.totalFares}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Total fuel costs: ${{companyStatistics.totalCosts}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Net profit: ${{companyStatistics.netProfit}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"card w-100\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">Drivers</h5>\\r\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #driversForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"table-responsive-md\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                Name\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                License Number\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let driver of drivers\\\">\\r\\n                            <td [ngSwitch]=\\\"editing\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required name=\\\"name_{{driver.driverID}}\\\" [(ngModel)]=\\\"driver.name\\\"\\r\\n                                       *ngSwitchCase=\\\"driver.driverID\\\" />\\r\\n                                <span *ngSwitchDefault>{{driver.name}}</span>\\r\\n                            </td>\\r\\n                            <td [ngSwitch]=\\\"editing\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"licenseNumber\\\" required name=\\\"licenseNumber_{{driver.driverID}}\\\" [(ngModel)]=\\\"driver.licenseNumber\\\"\\r\\n                                       *ngSwitchCase=\\\"driver.driverID\\\" />\\r\\n                                <span *ngSwitchDefault>{{driver.licenseNumber}}</span>\\r\\n                            </td>\\r\\n                            <td [ngSwitch]=\\\"editing\\\">\\r\\n                                <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" *ngSwitchCase=\\\"driver.driverID\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-2\\\" [disabled]=\\\"!driversForm.form.valid\\\">Save</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                                </div>\\r\\n                                <span class=\\\"btn-group\\\" role=\\\"group\\\" *ngSwitchDefault>\\r\\n                                    <a class=\\\"btn btn-secondary\\\" href=\\\"/Drivers/Details/{{driver.driverID}}\\\">Details</a>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editClicked(driver)\\\">Edit</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"showDeleteConfirm(content, driver)\\\">Delete</button>\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"adding; else addLink\\\">\\r\\n                            <td>\\r\\n                                <input class=\\\"form-control\\\" required #name />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input class=\\\"form-control\\\" required #licenseNumber />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-2\\\" [disabled]=\\\"!driversForm.form.valid\\\" (click)=\\\"saveNew(name.value, licenseNumber.value); name.value=''; licenseNumber.value=''\\\">Save</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelAdd()\\\">Cancel</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <ng-template #addLink>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNew()\\\">New Driver</button>\\r\\n                        </ng-template>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </form>\\r\\n     </div>\\r\\n</div>\\r\\n<!-- delete confirm modal -->\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Confirm Delete</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('crossClicked')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete driver {{toDelete.name}}?</p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"modal.close('deleteConfirmed')\\\">Delete</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close('deleteCancelled')\\\">Cancel</button>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlcnMvZHJpdmVycy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Driver } from '../driver';\nimport { DriverService } from '../driver.service';\nimport { CompanyStatistics } from '../statistics';\nimport { StatisticsService } from '../statistics.service'\nimport { AuthService } from '../auth.service';\n\nconst DELETE_CONFIRMED: string = \"deleteConfirmed\";\nconst DELETE_CANCELLED: string = \"deleteCancelled\";\nconst CROSS_CLICKED: string = \"crossClicked\";\n\n@Component({\n  selector: 'app-drivers',\n  templateUrl: './drivers.component.html',\n  styleUrls: ['./drivers.component.sass']\n})\nexport class DriversComponent implements OnInit {\n\n    drivers: Driver[];\n    companyStatistics: CompanyStatistics;\n    editing: number;\n    adding: boolean;\n    toDelete: Driver;\n\n    token: string;\n\n    getDrivers(): void {\n        this.driverService.getDrivers().subscribe(drivers => this.drivers = drivers);\n    }\n\n    getCompanyStatistics(): void {\n        this.statisticsService.getCompanyStatistics()\n            .subscribe(stats => this.companyStatistics = stats);\n    }\n\n    editClicked(driver: Driver): void {\n        this.cancelAdd();\n        this.editing = driver.driverID;\n    }\n    \n    cancelEdit(): void {\n        this.driverService.getDriver(this.editing).subscribe(driver => {\n            let dmem: Driver = this.drivers.find(d => d.driverID == this.editing);\n            if (dmem !== null && driver !== null) {\n                dmem.licenseNumber = driver.licenseNumber;\n                dmem.name = driver.name;\n                this.editing = 0;\n            }\n        });\n    }\n\n    addNew(): void {\n        this.cancelEdit();\n        this.adding = true;\n    }\n\n    cancelAdd(): void {\n        this.adding = false;\n    }\n\n    onSubmit(): void {\n        if (this.editing !== 0) {\n            let driver: Driver = this.drivers.find(d => d.driverID == this.editing);\n            this.driverService.updateDriver(driver).subscribe(x => this.editing = 0);\n        }\n    }\n\n    saveNew(name: string, licenseNumber: string): void {\n        name = name.trim();\n        if (!name) {return;}\n        licenseNumber = licenseNumber.trim();\n        if (!licenseNumber) {return;}\n\n        this.driverService.addDriver({name, licenseNumber} as Driver)\n            .subscribe(driver => {\n                this.drivers.push(driver);\n                this.getCompanyStatistics(); // update to reflect change\n            });\n    }\n\n    showDeleteConfirm(content, driver: Driver) {\n        this.toDelete = driver;\n        this.modalService.open(content, {ariaLabelledBy: 'deleteConfirmLabel'})\n            .result.then((result) => {\n                if (result == DELETE_CONFIRMED) {\n                    this.deleteDriver(driver);\n                }\n                else {\n                    this.cancelDelete();\n                }\n            }, (reason) => {\n                this.cancelDelete();\n            });\n    }\n\n    deleteDriver(driver: Driver) {\n        this.driverService.deleteDriver(driver).subscribe(x => {\n            var indexToDelete = this.drivers.indexOf(this.toDelete, 0);\n            this.drivers.splice(indexToDelete, 1);\n            this.toDelete = null;\n            this.getCompanyStatistics(); // update to reflect change\n        });\n    }\n\n    cancelDelete() {\n        this.toDelete = null;\n    }\n\n    constructor(private driverService: DriverService, \n        private statisticsService: StatisticsService,\n        private authService: AuthService,\n        private modalService: NgbModal) {\n        this.editing = 0;\n        this.adding = false;\n    }\n\n    ngOnInit() {\n        this.authService.makeSessionUserToken();\n        this.getDrivers();\n        this.getCompanyStatistics();\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, flatMap } from 'rxjs/operators';\nimport { LegCoordinates } from './leg-coordinates';\n\nimport { AuthService } from './auth.service';\n\nconst jsonHeader = { 'Content-Type': 'application/json' };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodingService {\n    private geocodingUrl = \"/api/geocoding\";\n\n    getLegCoordinates(id: number): Observable<LegCoordinates> {\n        const url = `${this.geocodingUrl}/${id}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.get<LegCoordinates>(url, options)));\n    }\n\n    getAddressCoordinates(address: string): Observable<number[]> {\n        const url = `${this.geocodingUrl}/direct/${address}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.get<number[]>(url, options)));\n    }\n\n    constructor(private http: HttpClient,\n        private authService: AuthService) { }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { HttpClient, HttpHeaders } from '../../node_modules/@angular/common/http';\n\nimport { Leg } from './leg';\n\nimport { Observable } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\n\nconst jsonHeader = { 'Content-Type': 'application/json' };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegService {\n    private legsUrl = '/api/legsapi';\n\n    getLegsAll(): Observable<Leg[]> {\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                switchMap(h => this.http.get<Leg[]>(this.legsUrl, h)));\n    }\n\n    getLegs(driverID: number): Observable<Leg[]> {\n        const url = `${this.legsUrl}/fordriver/${driverID}`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                switchMap(h => {return this.http.get<Leg[]>(url, h);}));\n    }\n\n    getLeg(id: number): Observable<Leg> {\n        const url = `${this.legsUrl}/${id}`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                switchMap(h => this.http.get<Leg>(url, h)));\n    }\n\n    createLeg(leg: Leg): Observable<any> {\n        const url = `${this.legsUrl}/new`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n                switchMap(h => this.http.post(url, leg, h)));\n    }\n\n    updateLeg(leg: Leg): Observable<any> {\n        const url = `${this.legsUrl}/${leg.legID}`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n                switchMap(h => this.http.put(url, leg, h)));\n    }\n\n    deleteLeg(leg: Leg): Observable<any> {\n        const url = `${this.legsUrl}/${leg.legID}`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                switchMap(h => this.http.delete(url, h)));\n    }\n\n    constructor(private http: HttpClient,\n        private authService: AuthService) { }\n}\n","﻿export class Leg {\n    legID: number;\n    driverID: number;\n    \n    startAddress: string;\n    pickupRequestTime: string;\n    startTime: string;\n    destinationAddress: string;\n    arrivalTime: string;\n\n    distance: number;\n    fare: number; // per-passenger fare\n    numOfPassengersAboard: number;\n    numOfPassengersPickedUp: number;\n    fuelCost: number; // fuel cost per mile\n\n    getTotalFuelCost(): number {\n        return this.fuelCost * this.distance;\n    }\n}","module.exports = \"<p>\\n  legs works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlZ3MvbGVncy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-legs',\n  templateUrl: './legs.component.html',\n  styleUrls: ['./legs.component.sass']\n})\nexport class LegsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","﻿export class LoginModel {\n    input: Input;\n\n    constructor(email: string, password: string) {\n        this.input.email = email;\n        this.input.password = password;\n        this.input.rememberMe = false;\n    }\n}\n\nexport class Input {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, flatMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\nconst jsonHeader = { 'Content-Type': 'application/json' };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PickupPredictorService {\n    private analysisUrl = '/api/analysisapi';\n\n    getFareClassIntervals(): Observable<number[]> {\n        const url = `${this.analysisUrl}/fareclassintervals`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.get<number[]>(url, options)));\n    }\n\n    setFareClassIntervals(intervalBounds: number[]): Observable<any> {\n        const url = `${this.analysisUrl}/fareclassintervals`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.put(url, intervalBounds, options)));\n    }\n\n    getFareClassProbabilities(startCoords: number[], endCoords: number[], delay: number, duration: number, pickups: number, interval: number) : Observable<number[]> {\n        const url = `${this.analysisUrl}/fareclassprob/${startCoords[0]}/${startCoords[1]}/${endCoords[0]}/${endCoords[1]}/${delay}/${duration}/${pickups}/${interval}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.get<number[]>(url, options)));\n    }\n\n    getPickupProbabilities(startCoords: number[], endCoords: number[], delay: number, duration: number, fare: number, interval: number): Observable<number[]> {\n        const url = `${this.analysisUrl}/pickupprob/${startCoords[0]}/${startCoords[1]}/${endCoords[0]}/${endCoords[1]}/${delay}/${duration}/${fare}/${interval}`;\n        return this.authService.authHeader().pipe(\n            map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n            flatMap(options => this.http.get<number[]>(url, options)));\n    }\n\n    constructor(private http : HttpClient,\n        private authService : AuthService) { }\n}\n","module.exports = \"<h2>Pickup predictions</h2>\\r\\n<p>\\r\\n    Predict probability of completing given leg and collecting fares.\\r\\n</p>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" #pickupPredictionForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card mb-2\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Leg information\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"card-text\\\" for=\\\"startAddress\\\">Start address</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"startAddress\\\" required [(ngModel)]=\\\"startAddress\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"card-text\\\" for=\\\"endAddress\\\">End address</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"endAddress\\\" required [(ngModel)]=\\\"endAddress\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"card-text\\\" for=\\\"pickupDelay\\\">Pickup delay (min)</label>\\r\\n                        <input type=\\\"number\\\" name=\\\"pickupDelay\\\" required [(ngModel)]=\\\"delay\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"card-text\\\" for=\\\"duration\\\">Duration (min)</label>\\r\\n                        <input type=\\\"number\\\" name=\\\"duration\\\" required [(ngModel)]=\\\"duration\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"card-text\\\" for=\\\"interval\\\">Interval over which to predict probabilities (min)</label>\\r\\n                        <input type=\\\"number\\\" name=\\\"interval\\\" required [(ngModel)]=\\\"interval\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"card mb-2\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            Fare class probabilities\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"pickups\\\" class=\\\"card-text\\\">Number of pickups</label>\\r\\n                                <input type=\\\"number\\\" name=\\\"pickups\\\" [(ngModel)]=\\\"pickups\\\" class=\\\"form-control\\\" />\\r\\n                            </div>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Predict fare class probabilities</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"card mb-2\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            Pickup probabilities\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"fare\\\" class=\\\"card-text\\\">Fare</label>\\r\\n                                <input type=\\\"number\\\" name=\\\"fare\\\" [(ngModel)]=\\\"fare\\\" class=\\\"form-control\\\" />\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"predictPickupProbabilities()\\\">Predict pickup probabilities</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<h2>Results</h2>\\r\\n<div class=\\\"row\\\">\\r\\n    <ng-template [ngIf]=\\\"fareClassProbabilities != null\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card mb-2\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Fare class probabilities\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\" *ngFor=\\\"let i of fareClassIndices\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"card-text pl-5\\\">${{i == 0 ? 0 : fareClassIntervalBoundaries[i-1]}} to ${{fareClassIntervalBoundaries[i]}}:</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"card-text pr-5\\\">{{fareClassProbabilities[i] * 100 | number:'1.1-1'}}%</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"fareClassIntervalBoundaries.length > 0\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"card-text pl-5\\\">${{fareClassIntervalBoundaries[fareClassIntervalBoundaries.length - 1]}}+:</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"card-text pr-5\\\">{{fareClassProbabilities[fareClassIntervalBoundaries.length] * 100}}%</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    <ng-template [ngIf]=\\\"pickupProbabilities != null\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card mb-2\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Pickup probabilities\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\" *ngFor=\\\"let i of pickupProbabilityIndices\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"pl-5 card-text\\\" *ngIf=\\\"i == 0\\\">\\r\\n                                Probability of failure to collect:\\r\\n                            </p>\\r\\n                            <p class=\\\"pl-5 card-text\\\" *ngIf=\\\"i > 0\\\">\\r\\n                                Probability of collecting {{i}} passenger<ng-template [ngIf]=\\\"i != 1\\\">s</ng-template>:\\r\\n                            </p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <p class=\\\"pr-5 card-text\\\">{{pickupProbabilities[i] * 100 | number:'1.1-1'}}%</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"pickupPredictionResults\\\">\\r\\n    <div class=\\\"col\\\"></div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BpY2t1cC1wcmVkaWN0b3IvcGlja3VwLXByZWRpY3Rvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, AfterViewChecked } from '@angular/core';\nimport { ViewportScroller } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { PickupPredictorService } from '../pickup-predictor.service';\nimport { GeocodingService } from '../geocoding.service';\nimport { Observable, combineLatest } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-pickup-predictor',\n  templateUrl: './pickup-predictor.component.html',\n  styleUrls: ['./pickup-predictor.component.scss']\n})\nexport class PickupPredictorComponent implements OnInit, AfterViewChecked {\n        constructor(private pickupPredictorService: PickupPredictorService,\n        private geocodingService: GeocodingService,\n        private aRoute: ActivatedRoute,\n        private viewportScroller: ViewportScroller,\n        private authService: AuthService) { }\n\n    startAddress: string;\n    startCoords: number[];\n    endAddress: string;\n    endCoords: number[];\n    delay: number;\n    duration: number;\n    interval: number;\n\n    pickups: number;\n    fare: number;\n\n    fareClassProbabilities: number[];\n    pickupProbabilities: number[];\n    pickupProbabilityIndices: number[];\n\n    fareClassIntervalBoundaries: number[];\n    fareClassIndices: number[];\n\n    // so AfterViewChecked knows when to scroll\n    resultsJustComputed: boolean;\n\n    geocodeInputAddresses(geoDependent: ((_1: number[], _2: number[]) => Observable<any>)): Observable<any> {\n        const startCoords$ = this.geocodingService.getAddressCoordinates(this.startAddress);\n        const endCoords$ = this.geocodingService.getAddressCoordinates(this.endAddress);\n\n        return combineLatest(startCoords$, endCoords$, (startCoords, endCoords) => ({startCoords, endCoords}))\n            .pipe(switchMap(pair => {\n                this.startCoords = pair.startCoords;\n                this.endCoords = pair.endCoords;\n\n                return geoDependent(this.startCoords, this.endCoords);\n            }));\n    }\n\n    onSubmit(): void {\n        this.geocodeInputAddresses((s, e) => this.pickupPredictorService.getFareClassProbabilities(\n            s, e, this.delay, \n            this.duration, this.pickups, this.interval))\n            .subscribe(probs => {\n                this.resultsJustComputed = true; \n                this.fareClassProbabilities = probs;\n            });\n    }\n    \n    predictPickupProbabilities(): void {\n        this.geocodeInputAddresses((s, e) => this.pickupPredictorService.getPickupProbabilities(\n            s, e, this.delay, \n            this.duration, this.fare, this.interval))\n            .subscribe(probs => {\n                this.resultsJustComputed = true;\n                this.pickupProbabilities = probs;\n                this.pickupProbabilityIndices = (new Array(probs.length)).fill(0).map((x,i)=>i);\n            });\n    }\n\n    ngOnInit() {\n        this.authService.makeSessionUserToken();\n        this.resultsJustComputed = false;\n        this.pickupPredictorService.getFareClassIntervals()\n            .subscribe(bounds => {\n                this.fareClassIntervalBoundaries = bounds;\n                this.fareClassIndices = (new Array(this.fareClassIntervalBoundaries.length))\n            .fill(0).map((x,i)=>i);\n            });\n\n    }\n\n    ngAfterViewChecked() {\n        if (this.resultsJustComputed) {\n            this.scrollToResults();\n            this.resultsJustComputed = false;\n        }\n    }\n\n    scrollToResults() {\n        this.viewportScroller.scrollToAnchor(\"pickupPredictionResults\");\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, flatMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\nconst jsonHeader = { 'Content-Type': 'application/json' };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredictorService {\n    private analysisUrl = '/api/analysisapi';\n\n    getRidershipProbabilities(driverID: number, delay: number, duration: number, fare: number): Observable<number[]> {\n        const url = `${this.analysisUrl}/multipickupprob/${driverID}/${delay}/${duration}/${fare}`;\n        return this.authService.authHeader().pipe(\n                map(ah => {return {headers: new HttpHeaders(Object.assign(ah, jsonHeader))};}),\n                flatMap(options => this.http.get<number[]>(url, options)));\n    }\n\n    constructor(private http: HttpClient,\n        private authService: AuthService) { }\n}\n","module.exports = \"<h2>Ridership Prediction for Driver: {{driver.name}}</h2>\\n\\n<p>\\n    Predict how many riders are likely <em>if a pickup occurs</em>.\\n</p>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" #riderPredictionForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"delay\\\">Anticipated delay (min)</label>\\n        <input type=\\\"number\\\" name=\\\"delay\\\" required [(ngModel)]=\\\"delay\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"duration\\\">Leg duration (min)</label>\\r\\n        <input type=\\\"number\\\" name=\\\"duration\\\" required [(ngModel)]=\\\"duration\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"fare\\\">Fare ($)</label>\\r\\n        <input type=\\\"number\\\" name=\\\"fare\\\" required [(ngModel)]=\\\"fare\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!riderPredictionForm.form.valid\\\">Predict</button>\\n</form>\\n\\n<ng-template [ngIf]=\\\"ridershipProbabilities != null\\\">\\r\\n    <div class=\\\"row\\\" *ngFor=\\\"let i of ridershipProbabilityIndices\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <p class=\\\"pl-5\\\">Probability of {{i+2}}<ng-template [ngIf]=\\\"i == 3\\\">+</ng-template> riders:</p>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <p class=\\\"pr-5\\\">{{ridershipProbabilities[i] * 100}}%</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZWRpY3Rvci9wcmVkaWN0b3IuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport { Driver } from '../driver';\nimport { PredictorService } from '../predictor.service';\nimport { DriverService } from '../driver.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-predictor',\n  templateUrl: './predictor.component.html',\n  styleUrls: ['./predictor.component.sass']\n})\nexport class PredictorComponent implements OnInit {\n\n    driver: Driver;\n    delay: number;\n    duration: number;\n    fare: number;\n    ridershipProbabilities: number[];\n    ridershipProbabilityIndices: number[];\n\n    getDriver(id: number): void {\n        this.driverService.getDriver(id).subscribe(driver => this.driver = driver);\n    }\n\n    onSubmit(): void {\n\n        this.predictorService.getRidershipProbabilities(this.driver.driverID, this.delay, this.duration, this.fare)\n        .subscribe(probs => this.ridershipProbabilities = probs);\n    }\n\n    constructor(private predictorService: PredictorService, \n        private driverService: DriverService,\n        private aRoute: ActivatedRoute,\n        private authService: AuthService) { \n        this.aRoute.params.subscribe(p => this.getDriver(p['id']));\n        this.ridershipProbabilityIndices = (new Array(4)).fill(0).map((x,i) => i);\n    }\n\n    ngOnInit() {\n        this.authService.makeSessionUserToken();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, flatMap } from 'rxjs/operators';\n\nimport { CompanyStatistics, DriverStatistics } from './statistics';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticsService {\n\n    private analysisUrl = '/api/analysisapi';\n\n    getCompanyStatistics(): Observable<CompanyStatistics> {\n        const url = `${this.analysisUrl}/company`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                flatMap(h => this.httpClient.get<CompanyStatistics>(url, h)));\n    }\n\n    getDriverStatistics(id: number): Observable<DriverStatistics> {\n        const url = `${this.analysisUrl}/${id}`;\n        return this.authService.authHeader()\n            .pipe(map(ah => {return {headers: new HttpHeaders(ah)};}),\n                flatMap(h => this.httpClient.get<DriverStatistics>(url, h)));\n    }\n\n    constructor(private httpClient: HttpClient,\n        private authService: AuthService) {\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}